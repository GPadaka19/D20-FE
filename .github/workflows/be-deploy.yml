name: Backend Build & CI/CD VPS

on:
  push:
    branches:
      - prod
    paths:
      - 'backend/**'

jobs:
  deploy:
    name: Backend Build & CI/CD VPS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          cd backend/docker
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" > .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env

      - name: Deploy PostgreSQL
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/D20-BE/docker
            sudo docker compose down
            sudo docker compose up -d

      - name: Send Telegram notification (Success)
        if: success()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage \
            -d chat_id=$TELEGRAM_CHAT_ID \
            -d text="‚úÖ CI/CD Sukses!%0AProject *D20-BE* berhasil dideploy ke VPS üéâ" \
            -d parse_mode=Markdown

      - name: Send failure Telegram notification
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage \
            -d chat_id=$TELEGRAM_CHAT_ID \
            -d text="‚ùå CI/CD Gagal!%0AProject *D20-BE* gagal dideploy ke VPS ‚ö†Ô∏è" \
            -d parse_mode=Markdown 